# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Angular CI

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["develop", "QA", "main", "release/*"]
  # Runs on pull requests
  pull_request:
    branches: ["develop", "QA", "main", "release/*"]
   
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    name: Test on node
    runs-on: self-hosted
    strategy:
      matrix:
        node_version: ['14.20']

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: Build
      run: |
        npm install

    - name: Install GH CLI and deploy
  # You may pin to the exact commit or the version.
  # uses: dev-hanz-ops/install-gh-cli-action@006996394f415f03969b74e3296af42f34f6d8f5
      uses: dev-hanz-ops/install-gh-cli-action@v0.1.0
    - name: git auth
      run: |
        gh auth login --with-token < ${{ secrets.GITHUB_TOKEN }}
        shopt -s extglob
        git stash
        ls -la
        git checkout gh-pages
        rm -rf !(dist)
        mv dist/store/* ./
        rm -rf dist
        ls -la
        git add .
        git commit -m "deploy"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
